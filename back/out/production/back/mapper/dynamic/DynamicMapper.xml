<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="nnu.edu.back.dao.dynamic.DynamicMapper">
    <resultMap id="SectionMap" type="nnu.edu.back.pojo.Section">
        <id property="name" column="name"/>
        <result property="startLon" column="start_lon"/>
        <result property="startLat" column="start_lat"/>
        <result property="endLon" column="end_lon"/>
        <result property="endLat" column="emd_lat"/>
    </resultMap>

    <resultMap id="FluxMap" type="nnu.edu.back.pojo.Flux">
        <result property="time" column="time"/>
        <result property="name" column="name"/>
        <result property="type" column="type"/>
        <result property="value" column="value"/>
    </resultMap>

    <resultMap id="SubstrateMap" type="nnu.edu.back.pojo.Substrate">
        <result property="time" column="time"/>
        <result property="location" column="location"/>
        <result property="type" column="type"/>
        <result property="soil" column="soil"/>
        <result property="level" column="level" typeHandler="nnu.edu.back.common.utils.JsonArrayTypeHandler"/>
    </resultMap>

    <resultMap id="SandTransportMap" type="nnu.edu.back.pojo.SandTransport">
        <result property="time" column="time"/>
        <result property="name" column="name"/>
        <result property="type" column="type"/>
        <result property="value" column="value"/>
    </resultMap>

    <select id="getAllSection" resultMap="SectionMap">
        select * from section
    </select>

    <select id="getDistanceAndElevationByName" resultType="java.util.HashMap">
        select distance, elevation from section_elevation_result where section_name = #{sectionName} order by number ASC
    </select>

    <select id="getFluxNameAndType" resultType="java.util.HashMap">
        select name, type from flux_result group by name, type
    </select>

    <select id="getFluxByNameAndType" resultMap="FluxMap">
        select * from flux_result where name = #{name} and type = #{type} order by time ASC
    </select>

    <select id="getAllSubstrate" resultMap="SubstrateMap">
        select * from substrate_result order by time ASC
    </select>

    <select id="getSandTransportNameAndType" resultType="java.util.HashMap">
        select name, type from sand_transport_result group by name, type
    </select>

    <select id="getSandTransportByNameAndType" resultMap="SandTransportMap">
        select * from sand_transport_result where name = #{name} and type = #{type} order by time ASC
    </select>

    <select id="getSectionSegment" resultType="java.lang.String">
        select distance from v_d_result where name = #{name} group by distance order by cast(replace(distance, "S", "") as integer) ASC
    </select>

    <select id="getSpeedOrientationNameAndType" resultType="java.util.HashMap">
        select name, type from v_d_result group by name, type
    </select>

    <select id="getTime" resultType="java.lang.String">
        select distinct time from v_d_result where name = #{name} and type = #{type} order by time ASC
    </select>

    <select id="getSpeedByNameAndType" resultType="java.lang.Double">
        select ifnull(ave_v, 0) as "speed" from v_d_result where name = #{name} and type = #{type} order by cast(replace(distance, "S", "") as integer) ASC, time ASC
    </select>

    <select id="getOrientationByNameAndType" resultType="java.lang.Double">
        select ifnull(ave_d, 0) from v_d_result where name = #{name} and type = #{type} order by cast(replace(distance, "S", "") as integer) ASC, time ASC
    </select>

    <select id="getSandContentClass" resultType="java.lang.String">
        select name from sand_content_result group by name
    </select>

    <select id="getSandContentTime" resultType="java.lang.String">
        select time from sand_content_result where name = #{name} order by time ASC
    </select>

    <select id="getSandContentValue" resultType="java.lang.Double">
        select ave_value from sand_content_result where name = #{name} order by time ASC
    </select>

    <select id="test" resultType="java.util.HashMap">
        ${sql}
    </select>
</mapper>